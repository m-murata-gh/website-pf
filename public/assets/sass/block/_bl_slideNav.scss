@use "settings/global" as gl;
@use "sass:math" as math;

/**
 * 設定
 */

// ボタンの大きさ
$btn-w: gl.$vr-rem * 2.5; // btnのwidth
$btn-h: $btn-w; // btnのheight
// ラインエリアの大きさ
$lines-w: $btn-w * .45; // linesのwidth
$lines-h: $btn-h * .35; // linesのheight
// ラインの太さ
$span-h: gl.$bw-thin; // lines spanのheight

.bl_slideNav {
  position: fixed;
  top: 0;
  right: 0;
  z-index: gl.$zindex-upper-top;
  height: 100%;

  &_btn {
    display: flex;
    position: absolute;
    top: gl.$vr-rem * .75;
    right: gl.$side-gap;
    z-index: 1;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: $btn-w;
    height: $btn-h;
    background-color: gl.$theme-color-main;
    border: solid gl.$bw-thin gl.$theme-color-base;
    border-radius: 50%;
    cursor: pointer;
  }

  &_lines {
    display: flex;
    position: relative;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    width: $lines-w;
    height: $lines-h;

    span {
      content: '';
      display: block;
      width: 100%;
      height: $span-h;
      background-color: gl.$theme-color-base;
      transition: transform 0.2s cubic-bezier(.09,.34,.63,1);
    }
  }

  // is_active
  &.is_active &_lines {
    span:nth-child(1) {
      position: absolute;
      top: math.div($span-h, -2);
      transform: translateY(math.div($lines-h, 2)) rotate(225deg);
    }

    span:nth-child(2) {
      opacity: 0;
    }

    span:nth-child(3) {
      position: absolute;
      bottom: math.div($span-h, -2);
      transform: translateY(math.div($lines-h, -2)) rotate(-225deg);
    }
  }

  &_menu {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    width: 0; // 非表示状態にする
    height: 100%;
    overflow: hidden; // 非表示状態にする
    background-color: gl.$theme-color-acc;
    font-style: italic;
    transition: width .2s cubic-bezier(.09,.34,.63,1);

    nav {
      display: flex;
      width: 100%;
      height: 100%;
      min-height: 480px; // <-flexによるスクロールの不具合対処（flexコンテナの子の、ulの高さより大きいpx値を指定すると良い）
      align-items: center;
      justify-content: center;
      opacity: 0; // 非表示状態にする
      transition: opacity .3s cubic-bezier(.6,.04,.98,.34);

      ul {
        padding: 4em; // jsでのmenuListの余白を作成

        li {
          display: block;
          margin-bottom: gl.$vr-rem * 2;
          @include gl.fslh-xxxx-lg;
          text-align: left;
          white-space: nowrap;

          a{
            display: block;
          }
        }

        li:last-child {
          margin-bottom: unset;
        }
      }
    }
  }

  // is_active
  &.is_active &_menu {
    overflow: auto; // アクティブ時にメニューのスクロールを有効にする
    width: 100vw; // 表示状態にする

    nav {
      opacity: 1; // 表示状態にする
    }
  }
}

/**
 * body
 */

// is_active
body.is_active__slideNav {
  overflow: hidden; // アクティブ時にメニュー以外のスクロールを無効にする
}
